#!/Users/mallen/perl5/perlbrew/perls/dtrace-perl/bin/perl

use 5.018;

use WWW::Twilio::API;
use JSON;
use Storable;
use Config::Tiny;
use Time::Piece;
use Getopt::Long;
use List::Util qw(shuffle);

my $conf_file = "$ENV{HOME}/.tombola";
my $entry_db = "entries.db";
my $pick_winner = 0;
my $help = 0;

our $VERSION = '0.01';

GetOptions (
    "conf|c=s"     => \$conf_file,
    "database|d=s" => \$entry_db,
    "winner|w"     => \$pick_winner,
    "help|h|?"     => \$help,
);

if ( $help ) {
    print <<_EOF;
usage: $0 [options]

version: $VERSION


    --conf     | -c  Specify alternate config file location
                     (defaults to \$HOME/.tombola)

    --database | -d  Specify alternate entry database location
                     (defaults to \$CWD)

    --winner   | -w  Pick a winner from all entries. (Winners
                     can only win once.)

    --help     | -h  This message.

_EOF
exit 0;
}

die "Couldn't find $conf_file\n" unless -e $conf_file;

my $config = Config::Tiny->read($conf_file) or die "Couldn't read $conf_file\n";

my $twilio = WWW::Twilio::API->new( AccountSid => $config->{twilio}->{sid},
                                    AuthToken  => $config->{twilio}->{auth} );

my $t = Time::Piece->new();

my $date = $t->ymd();

my $response = $twilio->GET("SMS/Messages.json?DateSent>=$date&PageSize=1000");

unless ($response->{code} == 200) {
    die "Twilio call failed ($response->{code}): $response->{message}\n$response->{content}\n";
}

my $data = JSON->new->decode($response->{content});

my $entries = {};
if ( -e $entry_db) {
    $entries = retrieve($entry_db);
}

my @new = grep { lc($_->{body}) eq "enter $config->{entry}->{name}" } 
                grep { $_->{direction} eq "inbound" }
                grep { not exists $entries->{$_->{from}} } @{$data->{sms_messages}};

map {; $entries->{$_->{from}} = $_ } @new;


if ( $pick_winner ) {
    my $winner; 
    my $num_entries = scalar keys %{ $entries };

    if ( $num_entries == 0 ) {
        die "There aren't any entries.\n";
    }
    elsif ( $num_entries == 1 ) {
        $winner = shift [ keys %{ $entries } ];
    }
    else {
        $winner = shift [ 
            shuffle ( 
                grep { not exists $entries->{$_}->{winner} } keys %{ $entries } 
                )];
    }

    if ( ! $winner ) {
        die "There are $num_entries entries but everyone seems to already be a winner.\n";
    }

    $entries->{$winner}->{winner} = 1;
SEND_SMS:
    $response = $twilio->POST('SMS/Messages',
        From => $config->{twilio}->{sms_from},
        To   => $winner,
        Body => "Congratulations! You're a raffle winner!"
    );
#        goto SEND_SMS if $response->{code} != 200;
    say "This winner is $winner";
}

store $entries, $entry_db;

